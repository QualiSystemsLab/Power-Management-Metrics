# Do NOT edit this file!
# It was generated by IdlC from Zeroconf.idl.

use strict;

package Raritan::RPC::devsettings::Zeroconf;

use parent qw(Raritan::RPC::RemoteObject);

use constant typeId => "devsettings.Zeroconf:1.0.0";

sub new {
    my ($class, $agent, $rid, $typeId) = @_;
    $typeId = $typeId || Raritan::RPC::devsettings::Zeroconf::typeId;
    return $class->SUPER::new($agent, $rid, $typeId);
}

use Raritan::RPC::devsettings::Zeroconf::Settings;

sub getSettings($) {
    my ($self) = @_;
    my $agent = $self->{'agent'};
    my $args = {};
    my $rsp = $agent->json_rpc($self->{'rid'}, 'getSettings', $args);
    my $_ret_;
    $_ret_ = Raritan::RPC::devsettings::Zeroconf::Settings::decode($agent, $rsp->{'_ret_'});
    return $_ret_;
}

use Raritan::RPC::devsettings::Zeroconf::Settings;

sub setSettings($$) {
    my ($self, $settings) = @_;
    my $agent = $self->{'agent'};
    my $args = {};
    $args->{'settings'} = Raritan::RPC::devsettings::Zeroconf::Settings::encode($settings);
    my $rsp = $agent->json_rpc($self->{'rid'}, 'setSettings', $args);
}

Raritan::RPC::Registry::registerProxyClass('devsettings.Zeroconf', 1, 0, 0, 'Raritan::RPC::devsettings::Zeroconf');
1;
