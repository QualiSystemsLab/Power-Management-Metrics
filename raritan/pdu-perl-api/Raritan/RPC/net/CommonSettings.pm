# Do NOT edit this file!
# It was generated by IdlC from Net.idl.

use strict;

package Raritan::RPC::net::CommonSettings;

use Raritan::RPC::net::RoutingSettings;
use Raritan::RPC::net::DnsSettings;
use Raritan::RPC::net::PortForwardingSettings;

sub encode {
    my ($in) = @_;
    my $encoded = {};
    $encoded->{'dns'} = Raritan::RPC::net::DnsSettings::encode($in->{'dns'});
    $encoded->{'routing'} = Raritan::RPC::net::RoutingSettings::encode($in->{'routing'});
    $encoded->{'portForwarding'} = Raritan::RPC::net::PortForwardingSettings::encode($in->{'portForwarding'});
    return $encoded;
}

sub decode {
    my ($agent, $in) = @_;
    my $decoded = {};
    $decoded->{'dns'} = Raritan::RPC::net::DnsSettings::decode($agent, $in->{'dns'});
    $decoded->{'routing'} = Raritan::RPC::net::RoutingSettings::decode($agent, $in->{'routing'});
    $decoded->{'portForwarding'} = Raritan::RPC::net::PortForwardingSettings::decode($agent, $in->{'portForwarding'});
    return $decoded;
}

1;
