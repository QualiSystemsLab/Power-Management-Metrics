# Do NOT edit this file!
# It was generated by IdlC from Net.idl.

use strict;

package Raritan::RPC::net::InterfaceInfoChangedEvent;

use constant typeId => "net.InterfaceInfoChangedEvent:1.0.0";
use Raritan::RPC::net::InterfaceInfo;
use Raritan::RPC::idl::Event;

sub encode {
    my ($in) = @_;
    my $encoded = Raritan::RPC::idl::Event::encode($in);
    $encoded->{'ifInfo'} = Raritan::RPC::net::InterfaceInfo::encode($in->{'ifInfo'});
    return $encoded;
}

sub decode {
    my ($agent, $in) = @_;
    my $decoded = Raritan::RPC::idl::Event::decode($agent, $in);
    $decoded->{'ifInfo'} = Raritan::RPC::net::InterfaceInfo::decode($agent, $in->{'ifInfo'});
    return $decoded;
}

Raritan::RPC::Registry::registerCodecClass('net.InterfaceInfoChangedEvent', 1, 0, 0, 'Raritan::RPC::net::InterfaceInfoChangedEvent');
1;
