# Do NOT edit this file!
# It was generated by IdlC from ResMon.idl.

use strict;

package Raritan::RPC::res_mon::ResMon;

use parent qw(Raritan::RPC::RemoteObject);

use constant typeId => "res_mon.ResMon:1.0.0";

sub new {
    my ($class, $agent, $rid, $typeId) = @_;
    $typeId = $typeId || Raritan::RPC::res_mon::ResMon::typeId;
    return $class->SUPER::new($agent, $rid, $typeId);
}

use Raritan::RPC::res_mon::Entry;

sub getDataEntries($$) {
    my ($self, $entries) = @_;
    my $agent = $self->{'agent'};
    my $args = {};
    my $rsp = $agent->json_rpc($self->{'rid'}, 'getDataEntries', $args);
    $$entries = [];
    for (my $i0 = 0; $i0 <= $#{$rsp->{'entries'}}; $i0++) {
        $$entries->[$i0] = Raritan::RPC::res_mon::Entry::decode($agent, $rsp->{'entries'}->[$i0]);
    }
}

Raritan::RPC::Registry::registerProxyClass('res_mon.ResMon', 1, 0, 0, 'Raritan::RPC::res_mon::ResMon');
1;
