# Do NOT edit this file!
# It was generated by IdlC from ServerSSLCert.idl.

use strict;

package Raritan::RPC::cert::ServerSSLCert::CertInfo;

use Raritan::RPC::cert::ServerSSLCert::CommonAttributes;
use Raritan::RPC::cert::ServerSSLCert::CommonAttributes;

sub encode {
    my ($in) = @_;
    my $encoded = {};
    $encoded->{'subject'} = Raritan::RPC::cert::ServerSSLCert::CommonAttributes::encode($in->{'subject'});
    $encoded->{'issuer'} = Raritan::RPC::cert::ServerSSLCert::CommonAttributes::encode($in->{'issuer'});
    $encoded->{'invalidBefore'} = "$in->{'invalidBefore'}";
    $encoded->{'invalidAfter'} = "$in->{'invalidAfter'}";
    $encoded->{'serialNumber'} = "$in->{'serialNumber'}";
    $encoded->{'keyLength'} = 1 * $in->{'keyLength'};
    return $encoded;
}

sub decode {
    my ($agent, $in) = @_;
    my $decoded = {};
    $decoded->{'subject'} = Raritan::RPC::cert::ServerSSLCert::CommonAttributes::decode($agent, $in->{'subject'});
    $decoded->{'issuer'} = Raritan::RPC::cert::ServerSSLCert::CommonAttributes::decode($agent, $in->{'issuer'});
    $decoded->{'invalidBefore'} = $in->{'invalidBefore'};
    $decoded->{'invalidAfter'} = $in->{'invalidAfter'};
    $decoded->{'serialNumber'} = $in->{'serialNumber'};
    $decoded->{'keyLength'} = $in->{'keyLength'};
    return $decoded;
}

1;
